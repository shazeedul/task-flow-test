function showAxiosErrors(error) {
    void 0 !== error.response && void 0 !== error.response.data
        ? void 0 !== error.response.data.errors
            ? $.each(error.response.data.errors, function (key, value) {
                  toastr.error(value);
              })
            : (void 0 !== error.response.data.message &&
                  toastr.error(error.response.data.message),
              void 0 !== error.response.data.errors.message &&
                  toastr.error(error.response.data.errors.message),
              void 0 !== error.response.data.data &&
                  toastr.error(error.response.data.data))
        : toastr.error("Something went wrong");
}
function copySummernoteContentToClipboard(editorId, type = "text") {
    var content = $(editorId)
        .summernote("code")
        .replace(/<\/?[^>]+(>|$)/g, "");
    console.log(content);
    var $temp = $("<textarea>");
    $("body").append($temp),
        $temp.val(content).select(),
        navigator.clipboard
            .writeText(content)
            .then(function () {
                console.log("Content copied to clipboard");
            })
            .catch(function (error) {
                console.error("Failed to copy content: ", error);
            })
            .finally(function () {
                $temp.remove();
            });
}
function ajaxProcess() {
    $("#preloader").show(), $("#preloader").removeClass("hide");
}
function ajaxComplete() {
    setTimeout(function () {
        $("#preloader").addClass("hide"), $("#preloader").hide();
    }, 300);
}
function submitFormAxios(e, callback = null, validationOptions = null) {
    e.preventDefault();
    const submitFormAxiosCall = new Event("submitFormAxiosCall");
    window.dispatchEvent(submitFormAxiosCall);
    var form = $(e.target);
    if (form.valid(validationOptions)) {
        form.find("button[type=submit]").attr("disabled", !0);
        var action = form.attr("action"),
            method = form.attr("method"),
            enctype = form.attr("enctype"),
            data = new FormData(form[0]);
        axios({
            method: method,
            url: action,
            data: data,
            headers: { "Content-Type": enctype },
        })
            .then(function (response) {
                form.find("button[type=submit]").attr("disabled", !1);
                const submitFormAxiosSuccess = new Event(
                    "submitFormAxiosSuccess"
                );
                window.dispatchEvent(submitFormAxiosSuccess),
                    void 0 !== response.data.message &&
                        toastr.success(response.data.message),
                    void 0 !== response.data.redirect &&
                        (window.location.href = response.data.redirect),
                    void 0 !== response.data.reload && window.location.reload();
                var table = $("#page-axios-data").data("table-id");
                if (null !== table)
                    try {
                        $(table).DataTable().ajax.reload(null, !1);
                    } catch (e) {
                        console.log(e);
                    }
                null !== callback
                    ? callback(response)
                    : $("#ajaxModal").modal("hide");
            })
            .catch(function (error) {
                form.find("button[type=submit]").attr("disabled", !1),
                    showAxiosErrors(error);
                const submitFormAxiosError = new Event("submitFormAxiosError");
                window.dispatchEvent(submitFormAxiosError);
            });
    }
}
function axiosModelInit() {
    $("body").append(
        '<div class="modal fade " id="ajaxModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">\n                    <div class="modal-dialog modal-xl modal-fullscreen-sm-down">\n                        <div class="modal-content"></div>\n                    </div>\n                </div>'
    );
}
function axiosModal(
    url,
    method = "GET",
    data = null,
    callback = null,
    modalSize = "modal-xl"
) {
    const axiosModalCall = new Event("axiosModalCall");
    window.dispatchEvent(axiosModalCall),
        "function" == typeof method
            ? ((callback = method), (method = "GET"))
            : "object" == typeof method
            ? ((data = method), (method = "GET"))
            : "function" == typeof data && ((callback = data), (data = null)),
        axios({ method: method, url: url, data: data })
            .then(function (response) {
                var ajaxModal = $("#ajaxModal");
                ajaxModal
                    .find(".modal-dialog")
                    .removeClass()
                    .addClass("modal-dialog")
                    .addClass("modal-fullscreen-sm-down"),
                    ajaxModal.find(".modal-dialog").addClass(modalSize);
                var modalContent = ajaxModal.find(".modal-content");
                modalContent.empty(), modalContent.html(response.data);
                const axiosModalSuccess = new Event("axiosModalSuccess");
                window.dispatchEvent(axiosModalSuccess),
                    $("#ajaxModal").modal("show"),
                    null !== callback &&
                        "function" == typeof callback &&
                        callback(response);
            })
            .catch(function (error) {
                showAxiosErrors(error), $("#ajaxModal").modal("hide");
                const axiosModalError = new Event("axiosModalError");
                window.dispatchEvent(axiosModalError);
            });
}
function reloadPage() {
    window.location.reload();
}
function select2AjaxInit(element, modal = null) {
    let options = $(element)
        .find("option")
        .map(function () {
            return { id: $(this).val(), text: $(this).text() };
        })
        .get();
    $(element).select2({
        width: "100%",
        ajax: {
            placeholder: $(element).data("placeholder") ?? "",
            url: $(element).data("ajax-url") ?? "",
            dataType: "json",
            delay: 250,
            data: function (params) {
                return { search: params.term, page: params.page || 1 };
            },
            processResults: function (data, params) {
                return (
                    (params.page = params.page || 1),
                    (results = data.data),
                    params.term
                        ? ((filterOptions = options.filter(function (item) {
                              return item.text
                                  .toLowerCase()
                                  .includes(params.term.toLowerCase());
                          })),
                          (results = filterOptions.concat(results)))
                        : (results = options.concat(results)),
                    {
                        results: results,
                        pagination: {
                            more: data.current_page < data.last_page,
                        },
                    }
                );
            },
            cache: !0,
        },
        placeholder: localize("Search...") ?? "Search...",
        language: {
            searching: function () {
                return localize("Loading...") ?? "Loading...";
            },
        },
        dropdownParent: modal ? $(modal) : null,
    });
}
$(document).ready(function () {
    if ($("[data-bs-toggle=tooltip]").length > 0)
        try {
            $("[data-bs-toggle=tooltip]").tooltip();
        } catch (e) {}
    if ((axiosModelInit(), $(".needs-validation").length > 0))
        try {
            $(".needs-validation").valid();
        } catch (error) {}
}),
    $(function () {
        let table = $("body").find("table").first();
        $(".search-btn").click(function () {
            let params = {};
            $(".my-filter-form")
                .find("select, textarea, input")
                .each(function (index, item) {
                    params[item.name] = item.value;
                }),
                table.on("preXhr.dt", function (e, settings, data) {
                    for (const [key, value] of Object.entries(params))
                        data[key] = value;
                }),
                table.DataTable().ajax.reload();
        }),
            $(".reset-btn").click(function () {
                $(".my-filter-form").find("textarea, input").val(""),
                    $(".my-filter-form")
                        .find("select")
                        .val("")
                        .trigger("change");
                let params = {};
                $(".my-filter-form")
                    .find("select, textarea, input")
                    .each(function (index, item) {
                        params[item.name] = item.value;
                    }),
                    table.on("preXhr.dt", function (e, settings, data) {
                        for (const [key, value] of Object.entries(params))
                            data[key] = value;
                    }),
                    $("#flush-collapseOne").collapse("hide"),
                    table.DataTable().ajax.reload();
            });
    });
